name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG: true

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        name: Guardian-DB ${{ github.ref_name }}
        body: |
          Guardian-DB Release ${{ github.ref_name }}
          
          ## Changes
          - See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details
          
          ## Installation
          ```toml
          [dependencies]
          guardian-db = "${{ github.ref_name }}"
          ```
          
          ## Documentation
          - [API Documentation](https://docs.rs/guardian-db/${{ github.ref_name }})
          - [Repository](https://github.com/${{ github.repository }})
        draft: false
        prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}

  build-and-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: Install Protocol Buffers compiler
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update && sudo apt-get install -y protobuf-compiler
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install protobuf
        elif [ "$RUNNER_OS" == "Windows" ]; then
          choco install protoc
        fi

    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}

    - name: Build guardian-db
      run: cargo build --release --all-features

    - name: Run tests
      run: cargo test --release --all-features

    - name: Build documentation
      run: cargo doc --no-deps --all-features

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: [create-release, build-and-test]
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install Protocol Buffers compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Publish to crates.io
      run: cargo publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}